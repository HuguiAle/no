
/************************ Adafruit IO Configuration *******************************/

// visite io.adafruit.com si necesita crear una cuenta,
// o si necesita su clave Adafruit IO.
#define IO_USERNAME    "Hugui_Ale" // nombre del usuario crado en io.adafruit
#define IO_KEY         "31f4aac4218d400aa0cc0141b9217e6b" // la clave que te da

/******************************* WIFI Configuration **************************************/

#define WIFI_SSID       "" //el nombre de la red wifi en el cual te vas a conectar
#define WIFI_PASS       "" // la contraseña del wifi

#include "AdafruitIO_WiFi.h" // este sale error. no conecta al servidor
AdafruitIO_WiFi io(IO_USERNAME, IO_KEY, WIFI_SSID, WIFI_PASS);

/************************ Main Program Starts Here *******************************/
// este es el programa

#include <ESP8266WiFi.h>
#include <AdafruitIO.h>
#include <Adafruit_MQTT.h>
#include <ArduinoHttpClient.h>

#define LED_PIN 16
#define OTHER_PIN 2

// button state
int current = 0;
int last = 0;

// configurar el feed 'comando'
AdafruitIO_Feed *command = io.feed("lights");

void setup() {

  pinMode(LED_PIN, OUTPUT);
  pinMode(OTHER_PIN, OUTPUT);

  // start the serial connection
  Serial.begin(115200);

  // connect to io.adafruit.com
  Serial.print("Connecting to Adafruit IO");
  io.connect();
  
  // configurar un controlador de mensajes para el feed 'comando'.
  // la función handleMessage(defined below)
  //se llamará cada vez que se envíe un mensaje
  // recibido de adafruit io.
  command->onMessage(handleMessage);

  // wait for a connection
  while(io.status() < AIO_CONNECTED) {
    Serial.print(".");
    delay(500);
  }

  // we are connected
  Serial.println();
  Serial.println(io.statusText());

}

void loop() {

  // io.run (); Se requiere para todos los sketches.
  // siempre debe estar presente en la parte superior de tu ciclo
  // function.mantiene al cliente conectado a
  // io.adafruit.com,y procesa cualquier dato entrante.
  io.run();


}

// Esta función se llama cada vez que aparece un mensaje de 'comando'
// se recibe de Adafruit IO. estaba adjunto a
// el comando se alimenta  setup() en la función anterior.
void handleMessage(AdafruitIO_Data *data) {

  int command = data->toInt();

  if (command == 1){ //light up the LED
    Serial.print("received <- ");
    Serial.println(command);
     digitalWrite(LED_PIN, HIGH);
     digitalWrite(OTHER_PIN, HIGH);     
  } else {
    Serial.print("received <- ");
    Serial.println(command);
    digitalWrite(LED_PIN, LOW);
    digitalWrite(OTHER_PIN, LOW);
  }
}
